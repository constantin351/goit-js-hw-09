{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,YAAW,WACHN,EACAI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAExBA,E,IAtCEQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAwBC,GACpBA,EAAMC,iBAUN,IARA,IAEuBC,EAAnBF,EAAMG,cADVC,SAAYC,EAAKH,EAALb,MAAOiB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAGrBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEvBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACnC1B,EAAc0B,EAAGL,GAChBM,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACfJ,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAEhE8B,OAAM,SAAAJ,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAChBJ,EAAA+B,OAAOI,QAAQ,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAG9DmB,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", createPromises);\n\nfunction createPromises(event) { \n    event.preventDefault();\n\n    const {\n    elements: { delay, step, amount }\n    } = event.currentTarget;\n\n    let delayValue = Number(delay.value);\n    let stepValue = Number(step.value);\n    let amountValue = Number(amount.value);\n    \n    for (let i = 1; i <= amountValue; i += 1) { \n        createPromise(i, delayValue)\n        .then(({ position, delay }) => {\n            Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n            Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n\n        delayValue += stepValue;\n    }\n}\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve({ position, delay });\n            } else {\n                reject({ position, delay });\n            }\n        }, delay)\n    });\n}\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayValue","Number","value","stepValue","amountValue","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.e162863e.js.map"}