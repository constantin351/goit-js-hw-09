{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACzBC,YAAW,KACHN,EACAI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAEhCA,EAAM,G,CAtCJQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAwBC,GACpBA,EAAMC,iBAEN,MACAC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACrBL,EAAMM,cAEV,IAAIC,EAAaJ,EAAMK,cACnBC,EAAYL,EAAKI,cACjBE,EAAcL,EAAOG,cAEzB,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACnCxB,EAAcwB,EAAGJ,GAChBK,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACfJ,EAAA4B,OAAOC,QAAQ,uBAAqB1B,QAAiBC,MAAU,IAElE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAChBJ,EAAA4B,OAAOG,QAAQ,sBAAoB5B,QAAeC,MAAU,IAGhEkB,GAAcE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", createPromises);\n\nfunction createPromises(event) { \n    event.preventDefault();\n\n    const {\n    elements: { delay, step, amount }\n    } = event.currentTarget;\n\n    let delayValue = delay.valueAsNumber;\n    let stepValue = step.valueAsNumber;\n    let amountValue = amount.valueAsNumber;\n    \n    for (let i = 1; i <= amountValue; i += 1) { \n        createPromise(i, delayValue)\n        .then(({ position, delay }) => {\n            Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n            Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n\n        delayValue += stepValue;\n    }\n}\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve({ position, delay });\n            } else {\n                reject({ position, delay });\n            }\n        }, delay)\n    });\n}\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","delayValue","valueAsNumber","stepValue","amountValue","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.aed2b6cb.js.map"}